// /**
//  * 0-1 背包
//  * 一个可装载重量为 W 的背包和 N 个物品，每个物品有重量和价值两个属性
//  * 其中第 i 个物品的重量为 wt[i]，价值为 val[i]
//  * 用这个背包装物品，最多能装的价值是多少
//  */
// // 定义子问题 [公式] 为：在前 [公式] 个物品中挑选总重量不超过 [公式] 的物品，每种物品至多只能挑选1个，使得总价值最大；这时的最优值记作 [公式] ，其中 [公式] ， [公式] 。

// // 考虑第 [公式]

// // 最优方案就是比较这两种方案，哪个会更好些：

// N = 3, W = 4
// wt = [2, 1, 3]
// val = [4, 2, 3]

// const backage = function (n, w) {
//     if (n < 0 || w < 0) {
//         return 0
//     }
//     let items = new Array(n)
//     for (let i = 0;i < n;i ++) {
//         for ()
//     }
// }
